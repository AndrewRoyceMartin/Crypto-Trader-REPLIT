<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Trades • Algorithmic Trading System</title>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>

  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"/>

  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <!-- Custom CSS -->
  <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}?v={{ cache_version|default(0) }}"/>

  <style>
    .kpi-card .label { font-size: .8rem; color: #6c757d; }
    .kpi-card .value { font-weight: 700; font-size: 1.15rem; }
    .chart-card { background: #fff !important; border: 1px solid rgba(0,0,0,.1); border-radius: .5rem; }
    .chart-card canvas { background: #fff !important; }
    .table thead th { white-space: nowrap; }
  </style>
</head>

<body>
  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="/">
        <i class="fas fa-chart-line me-2"></i>Algorithmic Trading System
      </a>
      <div class="navbar-nav me-auto">
        <a class="btn btn-outline-light btn-sm me-2" href="/"><i class="fas fa-home me-1"></i>Dashboard</a>
        <a class="btn btn-outline-light btn-sm me-2" href="/performance"><i class="fas fa-chart-bar me-1"></i>Performance</a>
        <a class="btn btn-outline-light btn-sm me-2" href="/holdings"><i class="fas fa-coins me-1"></i>Holdings</a>
        <a class="btn btn-light btn-sm me-2" href="/trades"><i class="fas fa-exchange-alt me-1"></i>Trades</a>
        <button class="btn btn-outline-success btn-sm me-2" onclick="exportATOTax()">
          <i class="fas fa-file-invoice-dollar me-1"></i>ATO Export
        </button>
      </div>

      <div class="navbar-nav ms-auto">
        <div class="nav-item d-flex align-items-center">
          <button class="btn btn-sm btn-outline-danger me-3" onclick="resetEntireProgram()">
            <i class="fas fa-power-off me-1"></i>Reset
          </button>
          <div class="me-3">
            <select class="form-select form-select-sm" id="currency-selector" onchange="changeCurrency()" style="min-width: 80px; font-size: 0.8rem;">
              <option value="USD" selected>USD</option>
              <option value="AUD">AUD</option>
              <option value="EUR">EUR</option>
              <option value="GBP">GBP</option>
            </select>
          </div>
          <span class="navbar-text me-3">
            <i class="fas fa-server text-info me-1"></i>
            <span class="text-light">Server Uptime:</span>
            <span id="system-uptime" class="text-info ms-1">0s</span>
          </span>
          <span class="navbar-text me-3" id="server-connection-status">
            <i class="fas fa-wifi text-success me-1"></i>
            <span class="text-light">OKX API:</span>
            <span id="server-connection-text" class="text-success ms-1">Connected</span>
          </span>
          <span class="navbar-text" id="okx-connection-status">
            <i class="fas fa-server text-success me-1"></i>
            <span class="text-light">Trading Mode:</span>
            <span id="okx-connection-text" class="text-success ms-1">Simulated</span>
          </span>
        </div>
      </div>
    </div>
  </nav>

  <!-- Page -->
  <div id="recent-trades-page" class="container-fluid py-4">
    <!-- Header & Controls -->
    <div class="row mb-3">
      <div class="col-12 d-flex align-items-center justify-content-between">
        <h4 class="mb-0">
          <i class="fas fa-exchange-alt me-2"></i>Trades
          <i class="fas fa-info-circle text-muted ms-2" data-bs-toggle="tooltip"
             title="Completed buy/sell executions with realized P&L, filters, and charts."></i>
        </h4>
        <div class="d-flex gap-2">
          <div class="btn-group">
            <button class="btn btn-success btn-sm" onclick="startTrading('paper', 'single')"><i class="fas fa-play me-1"></i>Paper (Single)</button>
            <button class="btn btn-success btn-sm" onclick="startTrading('paper', 'portfolio')"><i class="fas fa-play me-1"></i>Paper (Portfolio)</button>
          </div>
          <div class="btn-group">
            <button class="btn btn-warning btn-sm" onclick="startTrading('live', 'single')"><i class="fas fa-bolt me-1"></i>Live (Single)</button>
            <button class="btn btn-warning btn-sm" onclick="startTrading('live', 'portfolio')"><i class="fas fa-bolt me-1"></i>Live (Portfolio)</button>
          </div>
          <button class="btn btn-danger btn-sm" onclick="stopTrading()"><i class="fas fa-stop me-1"></i>Stop</button>
          <button class="btn btn-danger btn-sm" onclick="emergencyStop()"><i class="fas fa-exclamation-triangle me-1"></i>Emergency</button>
        </div>
      </div>
    </div>

    <!-- KPIs -->
    <div class="row g-3 mb-4">
      <div class="col-6 col-md-2">
        <div class="card p-3 kpi-card">
          <div class="label">Trades</div>
          <div id="trades-kpi-total" class="value">0</div>
        </div>
      </div>
      <div class="col-6 col-md-2">
        <div class="card p-3 kpi-card">
          <div class="label">Realized P&L</div>
          <div id="trades-kpi-realized" class="value">$0.00</div>
        </div>
      </div>
      <div class="col-6 col-md-2">
        <div class="card p-3 kpi-card">
          <div class="label">Win Rate</div>
          <div id="trades-kpi-winrate" class="value">0.0%</div>
        </div>
      </div>
      <div class="col-6 col-md-2">
        <div class="card p-3 kpi-card">
          <div class="label">Avg P&L / Trade</div>
          <div id="trades-kpi-avg" class="value">$0.00</div>
        </div>
      </div>
      <div class="col-6 col-md-2">
        <div class="card p-3 kpi-card">
          <div class="label">Fees</div>
          <div id="trades-kpi-fees" class="value">$0.00</div>
        </div>
      </div>
      <div class="col-6 col-md-2">
        <div class="card p-3 kpi-card">
          <div class="label">Last Trade</div>
          <div id="trades-kpi-lasttrade" class="value">—</div>
        </div>
      </div>
    </div>

    <!-- Charts -->
    <div class="row g-3 mb-4">
      <div class="col-lg-6">
        <div class="chart-card p-3">
          <div class="d-flex justify-content-between align-items-center">
            <h6 class="mb-0">Cumulative Realized P&L</h6>
            <small class="text-muted">By time</small>
          </div>
          <canvas id="trades-cum-chart" height="260"></canvas>
        </div>
      </div>
      <div class="col-lg-6">
        <div class="chart-card p-3">
          <div class="d-flex justify-content-between align-items-center">
            <h6 class="mb-0">P&L Distribution</h6>
            <small class="text-muted">Histogram</small>
          </div>
          <canvas id="trades-hist-chart" height="260"></canvas>
        </div>
      </div>
    </div>

    <!-- Filters -->
    <div class="card mb-3">
      <div class="card-body">
        <div class="row g-2 align-items-end">
          <div class="col-md-3">
            <label class="form-label mb-1">Symbol</label>
            <input type="text" id="trades-filter" class="form-control form-control-sm" placeholder="e.g., BTC/USDT" onkeyup="filterTradesTable()"/>
          </div>
          <div class="col-md-2">
            <label class="form-label mb-1">Action</label>
            <select id="trades-action-filter" class="form-select form-select-sm" onchange="filterTradesTable()">
              <option value="">All</option>
              <option value="BUY">Buy</option>
              <option value="SELL">Sell</option>
            </select>
          </div>
          <div class="col-md-2">
            <label class="form-label mb-1">Time</label>
            <select id="trades-time-filter" class="form-select form-select-sm" onchange="filterTradesTable()">
              <option value="">All Time</option>
              <option value="24h">24 Hours</option>
              <option value="3d">3 Days</option>
              <option value="7d">7 Days</option>
              <option value="1m">1 Month</option>
              <option value="6m">6 Months</option>
              <option value="1y">1 Year</option>
            </select>
          </div>
          <div class="col-md-2">
            <label class="form-label mb-1">P&L</label>
            <select id="trades-pnl-filter" class="form-select form-select-sm" onchange="filterTradesTable()">
              <option value="">All</option>
              <option value="positive">Profitable</option>
              <option value="negative">Loss</option>
            </select>
          </div>
          <div class="col-md-3 text-end">
            <button class="btn btn-outline-secondary btn-sm" onclick="clearTradesFilters()">
              <i class="fas fa-times me-1"></i>Clear Filters
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Trades Table -->
    <div class="card">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h6 class="mb-0"><i class="fas fa-list me-2"></i>Recent Trades</h6>
        <div class="small text-muted">New → Old</div>
      </div>
      <div class="table-responsive" style="max-height: 480px; overflow-y: auto;">
        <table class="table table-sm">
          <thead class="table-dark sticky-top">
            <tr>
              <th onclick="sortTradesTable(0)" class="sortable" style="cursor:pointer;">Trade # <i id="trades-sort-0" class="fas fa-sort ms-1"></i></th>
              <th onclick="sortTradesTable(1)" class="sortable" style="cursor:pointer;">Time <i id="trades-sort-1" class="fas fa-sort ms-1"></i></th>
              <th onclick="sortTradesTable(2)" class="sortable" style="cursor:pointer;">Symbol <i id="trades-sort-2" class="fas fa-sort ms-1"></i></th>
              <th onclick="sortTradesTable(3)" class="sortable" style="cursor:pointer;">Action <i id="trades-sort-3" class="fas fa-sort ms-1"></i></th>
              <th onclick="sortTradesTable(4)" class="sortable" style="cursor:pointer;">Size <i id="trades-sort-4" class="fas fa-sort ms-1"></i></th>
              <th onclick="sortTradesTable(5)" class="sortable" style="cursor:pointer;">Price <i id="trades-sort-5" class="fas fa-sort ms-1"></i></th>
              <th onclick="sortTradesTable(6)" class="sortable" style="cursor:pointer;">P&L <i id="trades-sort-6" class="fas fa-sort ms-1"></i></th>
            </tr>
          </thead>
          <tbody id="trades-table">
            <tr>
              <td colspan="7" class="text-center">
                <div class="d-flex align-items-center justify-content-center">
                  <div class="spinner-border spinner-border-sm text-primary me-2" role="status">
                    <span class="visually-hidden">Loading...</span>
                  </div>
                  <span class="text-muted">Loading trades...</span>
                </div>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>

  </div>

  <!-- Footer -->
  <footer class="bg-dark text-light py-4 mt-5">
    <div class="container-fluid">
      <div class="row">
        <div class="col-md-6">
          <p class="mb-1"><strong>ARM Digital Enterprises</strong></p>
          <p class="mb-2">ABN: 92 384 831 384</p>
          <p class="mb-0"><small>Algorithmic Trading System</small></p>
          <p class="mb-1"><small>Professional Cryptocurrency Portfolio Management</small></p>
          <p class="mb-0 text-info"><small><strong>Version: {{ version|default('dev') }}</strong></small></p>
        </div>
        <div class="col-md-6 text-md-end" style="font-size:.75rem;">
          <p class="mb-1"><strong>Investment Disclaimer:</strong> This system is for informational purposes only. Cryptocurrency trading involves substantial risk of loss.</p>
          <p class="mb-0"><strong>Compliance:</strong> Users are responsible for their own tax obligations and compliance with applicable laws and regulations.</p>
        </div>
      </div>
    </div>
  </footer>

  <!-- Bootstrap JS Bundle -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <!-- App JS -->
  <script src="{{ url_for('static', filename='app.js') }}?v={{ cache_version|default(0) }}"></script>

  <!-- Page bootstrap: KPIs + charts hook into your existing app.js refresh -->
  <script>
    // Format currency using the app's selected currency
    function fmtMoney(n) {
      if (window.tradingApp?.formatCurrency) return window.tradingApp.formatCurrency(Number(n) || 0);
      try { return new Intl.NumberFormat('en-US', { style:'currency', currency:'USD' }).format(Number(n)||0); }
      catch { return '$' + ((Number(n)||0).toFixed(2)); }
    }
    function pct(n) {
      const v = Number(n)||0;
      return (v>=0?'+':'') + v.toFixed(2) + '%';
    }

    // Compute KPIs from trades array
    function updateTradesKPIs(trades) {
      const t = Array.isArray(trades) ? trades : [];
      const total = t.length;

      let realized = 0, wins = 0, losses = 0, fees = 0;
      t.forEach(tr => {
        const pnl = Number(tr.pnl||0);
        realized += pnl;
        if (pnl > 0) wins++;
        if (pnl < 0) losses++;
        fees += Number(tr.fee||0);
      });
      const avg = total ? realized / total : 0;
      const winrate = total ? (wins/total)*100 : 0;

      const lastTs = t
        .map(x => x.timestamp ? new Date(x.timestamp) : null)
        .filter(Boolean)
        .sort((a,b)=>b-a)[0];

      document.getElementById('trades-kpi-total').textContent = total;
      document.getElementById('trades-kpi-realized').textContent = fmtMoney(realized);
      document.getElementById('trades-kpi-winrate').textContent = pct(winrate);
      document.getElementById('trades-kpi-avg').textContent = fmtMoney(avg);
      document.getElementById('trades-kpi-fees').textContent = fmtMoney(fees);
      document.getElementById('trades-kpi-lasttrade').textContent = lastTs ? lastTs.toLocaleString() : '—';
    }

    // Charts from trades
    let cumChart, histChart;
    function renderTradeCharts(trades) {
      const t = (trades || []).slice().sort((a,b)=> new Date(a.timestamp) - new Date(b.timestamp));

      // Cumulative P&L over time
      const labels = [];
      const cumData = [];
      let running = 0;
      t.forEach(tr => {
        running += Number(tr.pnl || 0);
        labels.push(new Date(tr.timestamp).toLocaleString());
        cumData.push(running);
      });

      const cumCtx = document.getElementById('trades-cum-chart').getContext('2d');
      if (cumChart) cumChart.destroy();
      cumChart = new Chart(cumCtx, {
        type: 'line',
        data: { labels, datasets: [{ label: 'Cumulative P&L', data: cumData, fill: false }] },
        options: {
          responsive: true, maintainAspectRatio: false,
          plugins: { legend: { display: false }, tooltip: { mode: 'index', intersect: false } },
          scales: { y: { ticks: { callback: v => fmtMoney(v) } } }
        }
      });

      // P&L Histogram
      const pnlVals = t.map(x => Number(x.pnl||0));
      const min = Math.min(0, ...pnlVals, 0), max = Math.max(0, ...pnlVals, 0);
      const bins = 10;
      const width = (max - min) / (bins || 1) || 1;
      const edges = Array.from({length: bins+1}, (_,i)=> min + i*width);
      const counts = Array.from({length: bins}, ()=>0);
      pnlVals.forEach(v => {
        const idx = Math.min(bins-1, Math.max(0, Math.floor((v - min)/width)));
        counts[idx] += 1;
      });
      const histLabels = counts.map((_,i)=>{
        const a = edges[i], b = edges[i+1];
        return `${fmtMoney(a)}–${fmtMoney(b)}`;
      });

      const histCtx = document.getElementById('trades-hist-chart').getContext('2d');
      if (histChart) histChart.destroy();
      histChart = new Chart(histCtx, {
        type: 'bar',
        data: { labels: histLabels, datasets: [{ label: 'Trades', data: counts }] },
        options: {
          responsive: true, maintainAspectRatio: false,
          plugins: { legend: { display: false } },
          scales: { x: { ticks: { autoSkip: true, maxRotation: 0 } }, y: { beginAtZero: true } }
        }
      });
    }

    // Hook into existing app.js & update everything when trades refresh
    document.addEventListener('DOMContentLoaded', () => {
      // Tooltips
      const tts = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
      tts.map(el => new bootstrap.Tooltip(el));

      // Trigger initial updates
      if (window.tradingApp) {
        window.tradingApp.updateDashboard?.();
        window.tradingApp.updateRecentTrades?.();
      }

      // Wrap displayRecentTrades to also compute KPIs & charts
      if (window.tradingApp && typeof window.tradingApp.displayRecentTrades === 'function') {
        const original = window.tradingApp.displayRecentTrades.bind(window.tradingApp);
        window.tradingApp.displayRecentTrades = function(trades) {
          original(trades);
          try {
            updateTradesKPIs(trades);
            renderTradeCharts(trades);
          } catch (e) {
            console.error('Trades page post-render hooks failed:', e);
          }
        };
      }

      // If trades are already cached, update KPIs/charts
      if (window.tradingApp?.allTrades) {
        updateTradesKPIs(window.tradingApp.allTrades);
        renderTradeCharts(window.tradingApp.allTrades);
      }
    });
  </script>
</body>
</html>
